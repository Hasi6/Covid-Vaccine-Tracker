// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

enum DOSE {
  FIRST
  SECOND
}

enum ROLE {
  ADMIN
  NORMAL
}


model Vaccine {
  id        Int      @id @default(autoincrement())
  title     String   @db.VarChar(255)
  createdAt        DateTime           @default(now())
  updatedAt        DateTime           @updatedAt @default(now())
  profile   Profile[]
}

model Profile {
  id     Int     @id @default(autoincrement())
  vaccine Vaccine @relation(fields: [vaccineId], references: [id])
  vaccineId Int
  district District @relation(fields: [districtId], references: [id])
  districtId Int
  dose DOSE @default(FIRST)
  user   User    @relation(fields: [userId], references: [id])
  userId Int     @unique
  vaccinateConfirm Boolean     @default(false)
  createdAt        DateTime           @default(now())
  updatedAt        DateTime           @updatedAt @default(now())
}

model User {
  id      Int      @id @default(autoincrement())
  NIC   String   @unique @db.VarChar(255)
  password    String  @db.VarChar(255)
  profile Profile?
  role ROLE @default(NORMAL)
  createdAt        DateTime           @default(now())
  updatedAt        DateTime           @updatedAt @default(now())
}



model Province {
  id Int @default(autoincrement()) @id
  En String?
  Si String?
  Ta String?
  district District[]
  createdAt        DateTime?           @default(now())
  updatedAt        DateTime?          @updatedAt @default(now())
}

model District {
  id Int @default(autoincrement()) @id
  En String?
  Si String?
  Ta String?
  province Province @relation(fields: [provinceId], references: [id])
  provinceId Int
  createdAt DateTime? @default(now())
  updatedAt DateTime? @updatedAt @default(now())
  location Location?
  profile   Profile[]

}

model Location {
  id Int @default(autoincrement()) @id
  En String?
  Si String?
  Ta String?
  district District @relation(fields: [districtId], references: [id])
  districtId Int
  fromDate DateTime
  toDate DateTime
  createdAt DateTime? @default(now())
  fromTime String
  toTime String
  updatedAt DateTime? @updatedAt @default(now())
}